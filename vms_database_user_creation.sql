CREATE USER VMS_DATABASE IDENTIFIED BY vms_database
 DEFAULT TABLESPACE USERS
 TEMPORARY TABLESPACE TEMP
 QUOTA UNLIMITED ON USERS;

GRANT ADMINISTER ANY SQL TUNING SET TO VMS_DATABASE;

GRANT ADMINISTER DATABASE TRIGGER TO VMS_DATABASE;

BEGIN
SYS.DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
  (GRANTEE_NAME   => 'VMS_DATABASE', 
   PRIVILEGE_NAME => 'ADMINISTER_RESOURCE_MANAGER',
   ADMIN_OPTION   => FALSE);
END;
/

GRANT ADMINISTER SQL MANAGEMENT OBJECT TO VMS_DATABASE;

GRANT ADMINISTER SQL TUNING SET TO VMS_DATABASE;

GRANT ADVISOR TO VMS_DATABASE;

GRANT ALTER ANY ASSEMBLY TO VMS_DATABASE;

GRANT ALTER ANY CLUSTER TO VMS_DATABASE;

GRANT ALTER ANY CUBE TO VMS_DATABASE;

GRANT ALTER ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT ALTER ANY DIMENSION TO VMS_DATABASE;

GRANT ALTER ANY EDITION TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT ALTER ANY INDEX TO VMS_DATABASE;

GRANT ALTER ANY INDEXTYPE TO VMS_DATABASE;

GRANT ALTER ANY LIBRARY TO VMS_DATABASE;

GRANT ALTER ANY MATERIALIZED VIEW TO VMS_DATABASE;

GRANT ALTER ANY MINING MODEL TO VMS_DATABASE;

GRANT ALTER ANY OPERATOR TO VMS_DATABASE;

GRANT ALTER ANY OUTLINE TO VMS_DATABASE;

GRANT ALTER ANY PROCEDURE TO VMS_DATABASE;

GRANT ALTER ANY ROLE TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.ALTER_ANY_RULE_SET,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT ALTER ANY SEQUENCE TO VMS_DATABASE;

GRANT ALTER ANY SQL PROFILE TO VMS_DATABASE;

GRANT ALTER ANY TABLE TO VMS_DATABASE;

GRANT ALTER ANY TRIGGER TO VMS_DATABASE;

GRANT ALTER ANY TYPE TO VMS_DATABASE;

GRANT ALTER DATABASE TO VMS_DATABASE;

GRANT ALTER PROFILE TO VMS_DATABASE;

GRANT ALTER RESOURCE COST TO VMS_DATABASE;

GRANT ALTER ROLLBACK SEGMENT TO VMS_DATABASE;

GRANT ALTER SESSION TO VMS_DATABASE;

GRANT ALTER SYSTEM TO VMS_DATABASE;

GRANT ALTER TABLESPACE TO VMS_DATABASE;

GRANT ALTER USER TO VMS_DATABASE;

GRANT ANALYZE ANY TO VMS_DATABASE;

GRANT AUDIT ANY TO VMS_DATABASE;

GRANT AUDIT SYSTEM TO VMS_DATABASE;

GRANT BACKUP ANY TABLE TO VMS_DATABASE;

GRANT BECOME USER TO VMS_DATABASE;

GRANT CHANGE NOTIFICATION TO VMS_DATABASE;

GRANT COMMENT ANY MINING MODEL TO VMS_DATABASE;

GRANT COMMENT ANY TABLE TO VMS_DATABASE;

GRANT CREATE ANY ASSEMBLY TO VMS_DATABASE;

GRANT CREATE ANY CLUSTER TO VMS_DATABASE;

GRANT CREATE ANY CONTEXT TO VMS_DATABASE;

GRANT CREATE ANY CUBE TO VMS_DATABASE;

GRANT CREATE ANY CUBE BUILD PROCESS TO VMS_DATABASE;

GRANT CREATE ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT CREATE ANY DIMENSION TO VMS_DATABASE;

GRANT CREATE ANY DIRECTORY TO VMS_DATABASE;

GRANT CREATE ANY EDITION TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT CREATE ANY INDEX TO VMS_DATABASE;

GRANT CREATE ANY INDEXTYPE TO VMS_DATABASE;

GRANT CREATE ANY JOB TO VMS_DATABASE;

GRANT CREATE ANY LIBRARY TO VMS_DATABASE;

GRANT CREATE ANY MATERIALIZED VIEW TO VMS_DATABASE;

GRANT CREATE ANY MEASURE FOLDER TO VMS_DATABASE;

GRANT CREATE ANY MINING MODEL TO VMS_DATABASE;

GRANT CREATE ANY OPERATOR TO VMS_DATABASE;

GRANT CREATE ANY OUTLINE TO VMS_DATABASE;

GRANT CREATE ANY PROCEDURE TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_ANY_RULE_SET,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT CREATE ANY SEQUENCE TO VMS_DATABASE;

GRANT CREATE ANY SQL PROFILE TO VMS_DATABASE;

GRANT CREATE ANY SYNONYM TO VMS_DATABASE;

GRANT CREATE ANY TABLE TO VMS_DATABASE;

GRANT CREATE ANY TRIGGER TO VMS_DATABASE;

GRANT CREATE ANY TYPE TO VMS_DATABASE;

GRANT CREATE ANY VIEW TO VMS_DATABASE;

GRANT CREATE ASSEMBLY TO VMS_DATABASE;

GRANT CREATE CLUSTER TO VMS_DATABASE;

GRANT CREATE CUBE TO VMS_DATABASE;

GRANT CREATE CUBE BUILD PROCESS TO VMS_DATABASE;

GRANT CREATE CUBE DIMENSION TO VMS_DATABASE;

GRANT CREATE DATABASE LINK TO VMS_DATABASE;

GRANT CREATE DIMENSION TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_EVALUATION_CONTEXT_OBJ,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT CREATE EXTERNAL JOB TO VMS_DATABASE;

GRANT CREATE INDEXTYPE TO VMS_DATABASE;

GRANT CREATE JOB TO VMS_DATABASE;

GRANT CREATE LIBRARY TO VMS_DATABASE;

GRANT CREATE MATERIALIZED VIEW TO VMS_DATABASE;

GRANT CREATE MEASURE FOLDER TO VMS_DATABASE;

GRANT CREATE MINING MODEL TO VMS_DATABASE;

GRANT CREATE OPERATOR TO VMS_DATABASE;

GRANT CREATE PROCEDURE TO VMS_DATABASE;

GRANT CREATE PROFILE TO VMS_DATABASE;

GRANT CREATE PUBLIC DATABASE LINK TO VMS_DATABASE;

GRANT CREATE PUBLIC SYNONYM TO VMS_DATABASE;

GRANT CREATE ROLE TO VMS_DATABASE;

GRANT CREATE ROLLBACK SEGMENT TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_OBJ,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.CREATE_RULE_SET_OBJ,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT CREATE SEQUENCE TO VMS_DATABASE;

GRANT CREATE SESSION TO VMS_DATABASE;

GRANT CREATE SYNONYM TO VMS_DATABASE;

GRANT CREATE TABLE TO VMS_DATABASE;

GRANT CREATE TABLESPACE TO VMS_DATABASE;

GRANT CREATE TRIGGER TO VMS_DATABASE;

GRANT CREATE TYPE TO VMS_DATABASE;

GRANT CREATE USER TO VMS_DATABASE;

GRANT CREATE VIEW TO VMS_DATABASE;

GRANT DEBUG ANY PROCEDURE TO VMS_DATABASE;

GRANT DEBUG CONNECT SESSION TO VMS_DATABASE;

GRANT DELETE ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT DELETE ANY MEASURE FOLDER TO VMS_DATABASE;

GRANT DELETE ANY TABLE TO VMS_DATABASE;

BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'DEQUEUE_ANY',
  GRANTEE      => 'VMS_DATABASE',
  ADMIN_OPTION => FALSE);
END;
/

GRANT DROP ANY ASSEMBLY TO VMS_DATABASE;

GRANT DROP ANY CLUSTER TO VMS_DATABASE;

GRANT DROP ANY CONTEXT TO VMS_DATABASE;

GRANT DROP ANY CUBE TO VMS_DATABASE;

GRANT DROP ANY CUBE BUILD PROCESS TO VMS_DATABASE;

GRANT DROP ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT DROP ANY DIMENSION TO VMS_DATABASE;

GRANT DROP ANY DIRECTORY TO VMS_DATABASE;

GRANT DROP ANY EDITION TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT DROP ANY INDEX TO VMS_DATABASE;

GRANT DROP ANY INDEXTYPE TO VMS_DATABASE;

GRANT DROP ANY LIBRARY TO VMS_DATABASE;

GRANT DROP ANY MATERIALIZED VIEW TO VMS_DATABASE;

GRANT DROP ANY MEASURE FOLDER TO VMS_DATABASE;

GRANT DROP ANY MINING MODEL TO VMS_DATABASE;

GRANT DROP ANY OPERATOR TO VMS_DATABASE;

GRANT DROP ANY OUTLINE TO VMS_DATABASE;

GRANT DROP ANY PROCEDURE TO VMS_DATABASE;

GRANT DROP ANY ROLE TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.DROP_ANY_RULE_SET,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT DROP ANY SEQUENCE TO VMS_DATABASE;

GRANT DROP ANY SQL PROFILE TO VMS_DATABASE;

GRANT DROP ANY SYNONYM TO VMS_DATABASE;

GRANT DROP ANY TABLE TO VMS_DATABASE;

GRANT DROP ANY TRIGGER TO VMS_DATABASE;

GRANT DROP ANY TYPE TO VMS_DATABASE;

GRANT DROP ANY VIEW TO VMS_DATABASE;

GRANT DROP PROFILE TO VMS_DATABASE;

GRANT DROP PUBLIC DATABASE LINK TO VMS_DATABASE;

GRANT DROP PUBLIC SYNONYM TO VMS_DATABASE;

GRANT DROP ROLLBACK SEGMENT TO VMS_DATABASE;

GRANT DROP TABLESPACE TO VMS_DATABASE;

GRANT DROP USER TO VMS_DATABASE;

BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'ENQUEUE_ANY',
  GRANTEE      => 'VMS_DATABASE',
  ADMIN_OPTION => FALSE);
END;
/

GRANT EXECUTE ANY ASSEMBLY TO VMS_DATABASE;

GRANT EXECUTE ANY CLASS TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_EVALUATION_CONTEXT,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT EXECUTE ANY INDEXTYPE TO VMS_DATABASE;

GRANT EXECUTE ANY LIBRARY TO VMS_DATABASE;

GRANT EXECUTE ANY OPERATOR TO VMS_DATABASE;

GRANT EXECUTE ANY PROCEDURE TO VMS_DATABASE;

GRANT EXECUTE ANY PROGRAM TO VMS_DATABASE;

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

BEGIN
SYS.DBMS_RULE_ADM.GRANT_SYSTEM_PRIVILEGE(
  PRIVILEGE    => SYS.DBMS_RULE_ADM.EXECUTE_ANY_RULE_SET,
  GRANTEE      => 'VMS_DATABASE',
  GRANT_OPTION => FALSE);
END;
/

GRANT EXECUTE ANY TYPE TO VMS_DATABASE;

GRANT EXECUTE ASSEMBLY TO VMS_DATABASE;

GRANT EXPORT FULL DATABASE TO VMS_DATABASE;

GRANT FLASHBACK ANY TABLE TO VMS_DATABASE;

GRANT FLASHBACK ARCHIVE ADMINISTER TO VMS_DATABASE;

GRANT FORCE ANY TRANSACTION TO VMS_DATABASE;

GRANT FORCE TRANSACTION TO VMS_DATABASE;

GRANT GLOBAL QUERY REWRITE TO VMS_DATABASE;

GRANT GRANT ANY OBJECT PRIVILEGE TO VMS_DATABASE;

GRANT GRANT ANY PRIVILEGE TO VMS_DATABASE;

GRANT GRANT ANY ROLE TO VMS_DATABASE;

GRANT IMPORT FULL DATABASE TO VMS_DATABASE;

GRANT INSERT ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT INSERT ANY MEASURE FOLDER TO VMS_DATABASE;

GRANT INSERT ANY TABLE TO VMS_DATABASE;

GRANT LOCK ANY TABLE TO VMS_DATABASE;

GRANT MANAGE ANY FILE GROUP TO VMS_DATABASE;

BEGIN
SYS.DBMS_AQADM.GRANT_SYSTEM_PRIVILEGE (
  PRIVILEGE    => 'MANAGE_ANY',
  GRANTEE      => 'VMS_DATABASE',
  ADMIN_OPTION => FALSE);
END;
/

GRANT MANAGE FILE GROUP TO VMS_DATABASE;

GRANT MANAGE SCHEDULER TO VMS_DATABASE;

GRANT MANAGE TABLESPACE TO VMS_DATABASE;

GRANT MERGE ANY VIEW TO VMS_DATABASE;

GRANT ON COMMIT REFRESH TO VMS_DATABASE;

GRANT QUERY REWRITE TO VMS_DATABASE;

GRANT READ ANY FILE GROUP TO VMS_DATABASE;

GRANT RESTRICTED SESSION TO VMS_DATABASE;

GRANT RESUMABLE TO VMS_DATABASE;

GRANT SELECT ANY CUBE TO VMS_DATABASE;

GRANT SELECT ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT SELECT ANY MINING MODEL TO VMS_DATABASE;

GRANT SELECT ANY SEQUENCE TO VMS_DATABASE;

GRANT SELECT ANY TABLE TO VMS_DATABASE;

GRANT SELECT ANY TRANSACTION TO VMS_DATABASE;

GRANT UNDER ANY TABLE TO VMS_DATABASE;

GRANT UNDER ANY TYPE TO VMS_DATABASE;

GRANT UNDER ANY VIEW TO VMS_DATABASE;

GRANT UNLIMITED TABLESPACE TO VMS_DATABASE;

GRANT UPDATE ANY CUBE TO VMS_DATABASE;

GRANT UPDATE ANY CUBE BUILD PROCESS TO VMS_DATABASE;

GRANT UPDATE ANY CUBE DIMENSION TO VMS_DATABASE;

GRANT UPDATE ANY TABLE TO VMS_DATABASE;


GRANT "CONNECT" TO VMS_DATABASE;
ALTER USER VMS_DATABASE DEFAULT ROLE "CONNECT";

ALTER USER VMS_DATABASE QUOTA UNLIMITED ON USERS;